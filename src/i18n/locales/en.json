{
  "app.init.language": "Initializing language",
  "app.config.loading": "Loading configuration...",
  "app.config.load_failed": "Unable to load configuration",
  "db.open.failed": "{icon-err}Unable to start database",
  "db.migrate.failed": "Database migration failed: {error}",
  "db.schema.verified": "Database schema is up-to-date.",
  "config.migrate.failed": "Config migration failed: {error}",
  "config.schema.verified": "Configuration verified.",
  "db.schema.already_update": "Database schema is already up-to-date.",
  "config.schema.list": "Current configuration",
  "config.open.failed": "Error reading config: {error}",
  "config.file.not_found": "Configuration file not found. Run `librius config --init` first.",
  "config.file.exists": "Configuration file already exists.",
  "config.file.init_failed": "Error creating default configuration: {error}",
  "config.file.created": "Created new configuration at: {path}",
  "config.file.create_failed": "Error creating configuration file: {error}",
  "config.file.edited_with": "Configuration file edited successfully with '{editor}'",
  "config.file.editor_not_available": "Editor '{editor}' not available, falling back to '{defaultEditor}'",
  "config.file.edited_fallback": "Configuration file edited successfully with fallback '{editor}'",
  "config.file.edit_failed_fallback": "Failed to edit configuration file with fallback '{editor}'",
  "app.library.info": "\uD83D\uDCDA Your Library",
  "app.yaml.parse_error": "YAML parse error",
  "app.mapping.just_created": "Mapping just created",
  "app.yaml.serialize_error": "Failed to serialize YAML",
  "config.file.migrated": "Configuration file migrated",
  "db.patch.applying": "Applying database patch: {patch}",
  "db.patch.all_applied": "All pending migrations applied.",
  "db.check.missing_columns": "Checking for missing columns in 'books'...",
  "db.add.column": "Adding column '{column}' to books table...",
  "db.column.added": "Column '{column}' added successfully.",
  "log.column.added": "Added column '{column}'",
  "db.add.column_failed": "Failed to add column '{column}': {error}",
  "db.column.all_extra_exists": "All required columns already exist. No changes applied.",
  "app.language.loaded": "Loaded language: {lang}",
  "app.language.not_found": "Language '{lang}' not found, falling back to 'en'",
  "log.language.set": "Language set to '{lang}'",
  "db.open.existing": "Opening existing database at: {db_path}",
  "db.create.new_db": "Database not found, creating new one at: {db_path}",
  "log.db.open": "Opened database '{db_path}'",
  "log.db.create": "Created new database '{db_path}'",
  "db.schema.initializing": "Initializing new database structure...",
  "db.schema.created": "Database created successfully.",
  "log.db.schema.init": "Initial database schema created",
  "db.schema.init_failed": "Database initialization failed: {error}",
  "db.migrate.applied": "Database migrations applied successfully.",
  "log.db.patch_applied": "Applied database patch: {patch}",
  "app_name": "Librius",
  "app_about": "Manage your personal book collection easily",
  "help_verbose": "Enable verbose output (debug mode)",
  "help_lang": "Specify the interface language (e.g. 'en', 'it')",
  "list_about": "List all books in your library",
  "config_about": "Manage Librius configuration",
  "config_init_help": "Initialize a new default configuration file",
  "config_print_help": "Print the current configuration file",
  "config_edit_help": "Edit the configuration file (default editor: $EDITOR, or nano/vim/notepad)",
  "config_editor_help": "Specify the editor to use (vim, nano, or custom path)",
  "help_flag_about": "Print this message or the help of the given subcommand(s)",
  "version_flag_about": "Print version",
  "backup_about": "Create a backup of your Librius database",
  "backup_compress_help": "Compress the backup (.zip on Windows, .tar.gz on Unix)",
  "backup.error.not_found": "Database file not found.",
  "backup.ok.plain": "Backup created at {path}",
  "backup.ok.compressed": "Backup created and compressed at {path}",
  "export_about": "Export data from your library",
  "export_csv_about": "Export books to CSV format",
  "export_output_help": "Optional output file path (default: auto timestamped)",
  "export.csv.ok": "Data exported successfully to {path}",
  "export.csv.error": "Failed to export data to CSV: {error}",
  "export_csv_help": "Export data to CSV (default)",
  "export_xlsx_help": "Export data to Excel XLSX format",
  "export_json_help": "Export data to JSON format",
  "export.json.ok": "JSON export completed successfully: {path}",
  "export.xlsx.ok": "XLSX export completed successfully: {path}",
  "export.json.error": "Error while exporting to JSON: {error}",
  "export.xlsx.error": "Error while exporting to XLSX: {error}",
  "import_about": "Import book data from CSV or JSON files",
  "import_file_help": "Path to the file to import (required)",
  "import_csv_help": "Import data from a CSV file (default)",
  "import_json_help": "Import data from a JSON file",
  "import.error.missing_file": "Missing input file path.",
  "import.csv.ok": "Imported {count} records from CSV file.",
  "import.json.ok": "Imported {count} records from JSON file.",
  "db.migrate.checking_isbn_index": "Checking for unique index on ISBN...",
  "db.migrate.isbn_index_exists": "Unique ISBN index already exists.",
  "db.migrate.isbn_index_created": "Created unique index on 'isbn' column.",
  "db.migrate.isbn_index_failed": "Failed to create unique ISBN index: {error}",
  "import.db.skipped_isbn": "Skipped duplicate ISBN: {isbn}",
  "log.import.completed": "Import completed, total records: {count}"
}
